@startuml
hide empty description
scale 350 width
title Shuttle Level State Diagram.

state Idle
state Storing {
  [*] --> S.Fetching: /shuttle->Goto(loc)
  S.Fetching --> S.Arrived: arrived
  S.Arrived --> S.Loading: [nonEmptyLoc]/shuttle-->load
  S.Arrived --> S.Waiting: [emptyLoc]
  S.Waiting --> S.Loading: receivedLoad/shuttle->load
  S.Loading --> S.Delivering: loaded/shuttle->goto(loc)
  S.Delivering --> S.Unloading: arrived[emptyLoc]/shuttle->unload
  S.Delivering --> [*]: arrived[nonEmptyLoc]/controller->ReleaseError
  S.Unloading --> [*]: unloaded/controller->Complete
}
state ErroredFull
state Grooming {
  [*] --> G.Fetching: /shuttle->Goto(loc)
  G.Fetching --> G.Arrived: arrived
  G.Arrived --> G.Loading: [nonEmptyLoc]/shuttle-->load
  G.Arrived --> [*]: [emptyLoc]/controller->LoadError
  G.Loading --> G.Delivering: loaded/shuttle->goto(loc)
  G.Delivering --> G.Unloading: arrived[emptyLoc]/shuttle->unload
  G.Delivering --> [*]: arrived[nonEmptyLoc]/controller->ReleaseError
  G.Unloading --> [*]: unloaded/controller->Complete
}

state Retrieving {
  [*] --> R.Fetching: /shuttle->Goto(loc)
  R.Fetching --> R.Arrived: arrived
  R.Arrived --> R.Loading: [nonEmptyLoc]/shuttle-->load
  R.Arrived --> [*]: [emptyLoc]/controller->LoadError
  R.Loading --> R.Delivering: loaded/shuttle->goto(loc)
  R.Delivering --> R.Unloading: arrived[emptyLoc]/shuttle->unload
  R.Delivering --> R.Waiting: arrived[fullLocation]
  R.Waiting --> R.Unloading: openSlot/shuttle->unload
  R.Unloading --> [*]: unloaded/controller->Complete
}

state LoopingBack {
  [*] --> L.Fetching: /shuttle->Goto(loc)
  L.Fetching --> L.Arrived: arrived
  L.Arrived --> L.Loading: [nonEmptyLoc]/shuttle-->load
  L.Arrived --> L.WaitToLoad: [emptyLoc]
  L.WaitToLoad --> L.Loading: receivedLoad/shuttle->load
  L.Loading --> L.Delivering: loaded/shuttle->goto(loc)
  L.Delivering --> L.Unloading: arrived[emptyLoc]/shuttle->unload
  L.Delivering --> L.WaitToRelease: arrived[nonEmptyLoc]
  L.WaitToRelease --> L.Unloading: openSlot/shuttle->unload
  L.Unloading --> [*]: unloaded/controller->Complete
}


[*] --> Idle
Idle --> Storing : Store
Storing --> Idle: Complete/controller->complete
Storing --> ErroredFull: ReleaseError/controller->ReleaseError
Idle --> Retrieving: Retrieve
Retrieving --> Idle: Complete/controller->Complete
Retrieving --> Idle: Complete/controller->LoadError
Idle --> Grooming: Groom(from, to)
Grooming --> Idle: Complete/controller->Complete
Grooming --> Idle: LoadError/controller->LoadError
Grooming --> ErroredFull: ReleaseError/controller->Complete
Idle --> LoopingBack: LoopBack
LoopingBack -> Idle: Complete/controller->Complete


/'
state configuring
state idle
state loading
state unloading
state running

state idle {
  configuring --> empty : NoConfigure
  loading --> full : DoneLoading
  unloading -up-> empty : DoneUnloading
  empty -down-> loading : Load
  full --> unloading : Unload
  idle -down-> empty : [no load]
  idle -right-> full : [loaded]
  }

[*] --> configuring
idle -up-> running : GoTo
running -down-> idle : Arrived
idle -right-> [*]

state NotShooting {
  [*] --> Idle
  Idle --> Configuring : EvConfig
  Configuring --> Idle : EvConfig
}

state Configuring {
  [*] --> NewValueSelection
  NewValueSelection --> NewValuePreview : EvNewValue
  NewValuePreview --> NewValueSelection : EvNewValueRejected
  NewValuePreview --> NewValueSelection : EvNewValueSaved

  state NewValuePreview {
     State1 -> State2
  }

}'/
@enduml
