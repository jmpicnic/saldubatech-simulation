@startuml
hide empty description
scale 350 width
title Shuttle Level State Diagram.

state Idle

state Delivering {
  [*] --> TravelFull: /shuttle->Goto(Loc)
  TravelFull --> Unloading: arrived[emptyLoc]/shuttle->unload
  Unloading --> [*]: doneUnloading/controller->Complete
  TravelFull --> [*]: arrived[fullLoc]/controller->ErrorLoaded
}

state Fetching {
  [*] --> TravelEmpty: /shuttle->Goto(loc)
  TravelEmpty --> Loading: shuttle.arrived[fullLoc]/shuttle->load
  Loading --> [*]: shuttle.doneLoading/controller->Complete
  TravelEmpty --> [*]: shuttle.arrived[emptyLoc]/controller->ErrorEmpty
}


[*] --> Idle
Idle --> Storing: store(from, to)
Idle --> Retrieving: retrieve(from, to)
Idle --> Grooming: groom(from, to)
Idle --> Loopback: loopback(from, to)
Storing --> Idle: complete/controller->complete
Storing --> StuckLoaded: errorLoaded
Retrieving --> Idle: complete || errorEmpty /controller->complete
Grooming --> Idle: complete/controller->complete
Loopback --> Idle: complete/controller->complete

state Storing {
  [*] --> S.Fetching
  S.Fetching --> S.Waiting: ErrorEmpty/controller->errorEmpty
  S.Fetching --> S.Delivering: complete
  S.Waiting --> S.Loading: loadArrived/shuttle->load
  S.Loading --> S.Delivering: complete
  S.Delivering --> [*]: Complete/controller->complete
  S.Delivering --> [*]: ErrorLoaded/controller->errorLoaded
}

state Retrieving {
  [*] --> R.Fetching
  R.Fetching --> R.Delivering: complete
  R.Fetching --> [*]: errorEmpty
  R.Delivering --> [*]: complete
  R.Delivering --> R.Waiting: errorLoaded
  R.Waiting --> R.Unloading: openSlot/shuttle.unload
  R.Unloading --> [*]: complete
}

state Grooming {
  [*] --> G.Fetching
  G.Fetching --> G.Delivering: complete
  G.Fetching --> [*]: errorEmpty
  G.Delivering --> [*]: Complete/controller->complete
  G.Delivering --> [*]: ErrorLoaded/controller->errorLoaded
}

state Loopback {
  [*] --> L.Fetching
  L.Fetching --> L.WaitForLoad: ErrorEmpty/controller->errorEmpty
  L.Fetching --> L.Delivering: complete
  L.WaitForLoad --> L.Loading: loadArrived/shuttle->load
  L.Loading --> L.Delivering: complete
  L.Delivering --> L.WaitForSlot: errorLoaded
  L.Delivering --> [*]: complete
  L.WaitForSlot --> L.Unloading: openSlot/shuttle.unload
  L.Unloading --> [*]: complete
}


/'
state configuring
state idle
state loading
state unloading
state running

state idle {
  configuring --> empty : NoConfigure
  loading --> full : DoneLoading
  unloading -up-> empty : DoneUnloading
  empty -down-> loading : Load
  full --> unloading : Unload
  idle -down-> empty : [no load]
  idle -right-> full : [loaded]
  }

[*] --> configuring
idle -up-> running : GoTo
running -down-> idle : Arrived
idle -right-> [*]

state NotShooting {
  [*] --> Idle
  Idle --> Configuring : EvConfig
  Configuring --> Idle : EvConfig
}

state Configuring {
  [*] --> NewValueSelection
  NewValueSelection --> NewValuePreview : EvNewValue
  NewValuePreview --> NewValueSelection : EvNewValueRejected
  NewValuePreview --> NewValueSelection : EvNewValueSaved

  state NewValuePreview {
     State1 -> State2
  }

}'/
@enduml
