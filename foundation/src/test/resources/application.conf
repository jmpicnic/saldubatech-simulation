#akka.http.[server|client].idle-timeout
akka {
  log-config-on-start = off
  log-dead-letters = 10
  log-dead-letters-during-shutdown = off
  loglevel = DEBUG
  stdout-loglevel = DEBUG
  #loggers = [akka.event.slf4j.Slf4jLogger]
  #logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  http {
    server {
       idle-timeout = 5 minutes
    }
  }

  actor {
    warn-about-java-serializer-usage = off
    debug {
      # enable function of LoggingReceive, which is to log any received message at
      # DEBUG level
      receive = off

      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill etc.)
      autoreceive = off

      # enable DEBUG logging of actor lifecycle changes
      lifecycle = off

      # enable DEBUG logging of unhandled messages
      unhandled = off

      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = off

      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = off


    }
  }
}

http {
  interface = "0.0.0.0"
  interface = ${?NIC_IP}
  port = 8080
  port = ${?NIC_PORT}
  self-timeout = 10000 ms
}

auth {
  cognito = "http://"
  cognito = ${?USER_POOL}
  allow-all = false
}

database {
  db {
      user = "develop"
      password = "4Salduba4!"
      host = "localhost"
      host = ${?DB_HOST}
      port = 5432
      db-name = "salduba_dev"
      db-name = ${?DB_NAME}
      url = "jdbc:postgresql://"${database.db.host}":"${database.db.port}"/"${database.db.db-name}
  }
  profile = "com.cruxsystems.common.persistence.rdbms.ExtendedPostgresProfile$"
}

flyway {
  rootLocation = "database"
}
